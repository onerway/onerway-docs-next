---
alwaysApply: true
description: Component Quality Checklist — 适用于 Vue 3 / Nuxt 3 组件在开发、重构与 Code Review 时的最低质量要求与验收标准
---

# Component Quality Checklist（组件最低质量要求）

本规则为所有组件的“最低质量门槛”。适用技术栈：Vue 3（Composition API）/ Nuxt 3 / TypeScript / TailwindCSS / Nuxt UI。

关联规范：
- [frontend-development-guidelines.mdc](mdc:.cursor/rules/frontend-development-guidelines.mdc)
- [COMPOSABLES.md](mdc:.cursor/rules/COMPOSABLES.md)（三层架构与去重复用：核心服务 → 业务组合式 → 页面/组件使用）

## 何时使用（使用时机与场景）
- 新建组件：设计/开发前自检与开发中每日例检
- 重构：重构前/后对比检查差异
- 组件库：新增组件的验收标准
- Code Review：审查单依据
- Pre-merge：自测门禁清单

## 验收清单（必须满足的最低要求）

> 勾选全部“必须”项方可通过；“条件”项按组件适用性执行。

### 1) 响应式布局（必须）
- [ ] 断点覆盖极窄/常规/极宽屏与横竖屏切换
- [ ] 可预见的溢出与折叠策略（多行省略/折叠面板/滚动/粘性）
- [ ] 易读的内容宽度（合理行长、行高、间距），避免布局跳动

### 2) 主题与定制（必须）
- [ ] 使用 `useColorMode` 同步 light/dark（Nuxt UI），主题切换无闪烁
- [ ] 设计令牌/CSS variables 驱动颜色与间距，不硬编码颜色
- [ ] 提供密度（紧凑/舒适）与高对比主题的扩展接口

### 3) 可访问性 a11y（必须）
- [ ] 语义化结构与 ARIA 角色/属性正确；标题层级有序；landmarks 合理
- [ ] 焦点可见（清晰的 focus ring）；焦点管理正确（陷阱/初始焦点/循环）
- [ ] Roving tabindex 适用于可选择列表/菜单/栈式组件
- [ ] 键盘路径完整：Tab/Shift+Tab、箭头、Enter/Space、Esc 关闭对话框
- [ ] 异步状态用 `aria-live` 区域播报（加载/成功/错误）

### 4) 视障用户体验（必须）
- [ ] 字号放大不破版，文本与交互元素对比度达 WCAG AA
- [ ] 状态不以颜色唯一表达（文字/形状/图标冗余提示）
- [ ] 尊重 `prefers-reduced-motion`，为关键动效提供可禁用/降级

### 5) 键鼠与多输入（必须）
- [ ] 键盘、鼠标、触屏、触笔等输入等价可用
- [ ] 拖放/长按/双击类交互提供替代路径与可发现性

### 6) 状态与反馈完整性（必须）
- [ ] 加载/空/错误/成功的统一呈现与文案
- [ ] 错误可定位（字段级/组件级）；提供重试/撤销/恢复路径

### 7) 国际化与本地化（必须）
- [ ] 所有可见文案无硬编码，使用 i18n 键（aria 文本同样国际化）
- [ ] RTL 兼容；长文案溢出策略；数字/日期/单位本地化

### 8) 性能与加载策略（必须）
- [ ] 按需加载/代码分割（动态导入），Skeleton/占位优化感知
- [ ] 大列表必要时使用虚拟化；图像/图标优化（尺寸、格式、懒加载）
- [ ] SSR/水合一致，无 hydration 警告与首屏闪烁
- [ ] 组合式需 SSR 安全：仅在客户端访问浏览器 API；持久状态使用 `useState`；必要时使用 `client-only` 隔离

### 9) 动效与时序（必须）
- [ ] 关键动效可中止/可跳过，缓动与时长统一
- [ ] 重要状态变化提供非颜色的可感知反馈

### 10) 语义与 SEO（条件：可索引内容）
- [ ] 正确的语义标记与可被抓取的结构
- [ ] 分享元信息（OG/Twitter）与可分享性

### 11) 错误与恢复（必须）
- [ ] 弱网/离线/超时的降级策略（重试/回退）
- [ ] 记录错误并向用户给出明确的恢复路径

### 12) 安全与隐私（必须）
- [ ] XSS/HTML 注入防护；外链 `rel="noopener noreferrer"`
- [ ] 剪贴板/通知/权限请求显式同意与降级处理

### 13) 可扩展性与 API 契约（必须）
- [ ] 插槽与组合式 API 设计清晰；避免重复造轮子（复用核心服务）
- [ ] `v-model` 契约、事件命名与 payload 类型明确
- [ ] 必须复用 `composables/shared/` 能力（`constants`、`types`、`utils`、`skeleton-utils`），禁止重复实现已存在的缓存/存储/路径解析等功能
- [ ] 遵循三层架构：`shared → feature composables → components`；组件层不得直接实现共享基础设施
- [ ] 优先采用 VueUse 能力（如 `useClipboard`、`useStorage`、防抖/节流等），无充分理由不得自造等价功能

### 14) 可观测性与度量（必须）
- [ ] 埋点事件语义化；关键性能指标（LCP/INP/CLS）可观测
- [ ] 错误日志与追踪接入点预留

### 15) 测试与验证（必须）
- [ ] a11y 静态扫描（axe）零阻断项；关键交互用例覆盖
- [ ] 视觉回归（必要组件）；跨设备/浏览器抽样验证

### 16) 文档与示例（必须）
- [ ] 属性/事件/插槽表；多状态示例（加载/错误/空/禁用）
- [ ] i18n 与主题切换示例（含 `useColorMode`）

## 开发准则关联
- 代码风格、命名、组合式与类型安全：参见 [frontend-development-guidelines.mdc](mdc:.cursor/rules/frontend-development-guidelines.mdc)
- 组合式三层架构与去重复用（强制）：参见 [COMPOSABLES.md](mdc:.cursor/rules/COMPOSABLES.md)

## 不通过示例（常见问题）
- 缺失焦点环/键盘路径不可达/只能鼠标操作
- 仅以颜色区分状态、缺空/错误/加载状态
- 文案/aria 文本硬编码；未使用 `useColorMode` 处理主题
- SSR 首屏闪烁或 hydration 警告；长列表未做性能优化
- 绕过 `composables/shared/` 在组件或组合式中重复实现已有功能
- 忽略 VueUse 的成熟能力（如剪贴板/存储/防抖等）而无必要理由自造等价实现
- 组合式持久状态未用 `useState`，或直接访问 `window`/`document` 导致 SSR 报错/水合警告

## 快速检查模板（复制到 PR/自检记录）

组件自检清单：
- [ ] 响应式布局达标，溢出与折叠策略明确
- [ ] 主题用 `useColorMode`，无闪烁；颜色令牌化
- [ ] a11y 通过：焦点、ARIA、键盘路径、`aria-live`
- [ ] 性能策略：按需加载/占位/（必要时）虚拟化；SSR 一致
- [ ] 状态与反馈完整；错误可恢复；i18n 无硬编码
- [ ] 可扩展 API 与文档/示例齐备；测试（axe/交互/视觉）达标

Code Review 质检单：
- [ ] 语义结构合理且对屏幕阅读器友好
- [ ] 输入设备等价可用；拖放类交互有替代路径
- [ ] 安全与隐私项合规；外链与权限处理正确
- [ ] 可观测性埋点/性能指标与错误追踪接入

## 术语与参考
- 焦点陷阱（Focus Trap）：将焦点限制在对话框等容器内部，Esc 可关闭
- Roving tabindex：在同一可选集内移动焦点的键盘导航模式
- ARIA live region：用于宣告异步内容变化的辅助技术区域
- 参考标准：WCAG 2.1 AA、WAI-ARIA Authoring Practices

