const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./D30LMNjT.js","./BOEjTd95.js","./entry.BvnyHnw7.css"])))=>i.map(i=>d[i]);
import{a_ as t,a$ as e,_ as n,b0 as o}from"./BOEjTd95.js";function r(t,n){const o=function(t){const n=t.match(/FROM\s+(\w+)/);if(!n)return{};const o=e[function(t){return t.replace(/^_content_/,"")}(n[1])];return(null==o?void 0:o.fields)||{}}(t),r={...n};for(const e in r)"json"===o[e]&&r[e]&&"undefined"!==r[e]&&(r[e]=JSON.parse(r[e])),"boolean"===o[e]&&"undefined"!==r[e]&&(r[e]=Boolean(r[e]));for(const e in r)"NULL"===r[e]&&(r[e]=void 0);return r}let i;const a={},c={};function s(e){async function s(e){return i||(c._=c._||async function(){if(!i){const t=await n((()=>import("./D30LMNjT.js")),__vite__mapDeps([0,1,2]),import.meta.url).then((t=>t.default));globalThis.sqlite3ApiConfig={silent:!0,debug:(...t)=>console.debug(...t),warn:(...t)=>{String(t[0]).includes("OPFS sqlite3_vfs")||console.warn(...t)},error:(...t)=>console.error(...t),log:(...t)=>{}};const e=await t();i=new e.oo1.DB}return i}(),i=await c._,Reflect.deleteProperty(c,"_")),a[String(e)]||(c[String(e)]=c[String(e)]||async function(e){if(window.sessionStorage.getItem("previewToken"))return i;let n=null;const r=`checksum_${e}`,a=`collection_${e}`;let c="matched";try{const n=i.exec({sql:`SELECT * FROM ${o.info} where id = '${r}'`,rowMode:"object",returnValue:"resultRows"}).shift();(null==n?void 0:n.version)!==t[String(e)]&&(c="mismatch")}catch{c="missing"}if("matched"!==c){window.localStorage.getItem(`content_${r}`)===t[String(e)]&&(n=window.localStorage.getItem(`content_${a}`));if(!n){n=await async function(e,n){return await $fetch(`/__nuxt_content/${n}/sql_dump`,{context:{},responseType:"text",headers:{"content-type":"text/plain"},query:{v:t[String(n)],t:void 0}})}(0,String(e));try{window.localStorage.setItem(`content_${r}`,t[String(e)]),window.localStorage.setItem(`content_${a}`,n)}catch(s){console.error("Database integrity check failed, rebuilding database",s)}}const l=await async function(t,e="gzip"){var n;const o=Uint8Array.from(atob(t),(t=>t.charCodeAt(0))),r=null==(n=new Response(new Blob([o])).body)?void 0:n.pipeThrough(new DecompressionStream(e));return(await new Response(r).text()).split("\n")}(n);await i.exec({sql:`DROP TABLE IF EXISTS ${o[String(e)]}`}),"mismatch"===c&&await i.exec({sql:`DELETE FROM ${o.info} WHERE id = '${r}'`});for(const t of l)try{await i.exec(t)}catch(s){console.error("Error executing command",s)}}return i}(e),await c[String(e)],a[String(e)]="loaded",Reflect.deleteProperty(c,String(e))),i}return{all:async(t,n)=>(await s(e),i.exec({sql:t,bind:n,rowMode:"object",returnValue:"resultRows"}).map((e=>r(t,e)))),first:async(t,n)=>(await s(e),r(t,i.exec({sql:t,bind:n,rowMode:"object",returnValue:"resultRows"}).shift())),exec:async(t,n)=>{await s(e),await i.exec({sql:t,bind:n})}}}export{s as loadDatabaseAdapter};
