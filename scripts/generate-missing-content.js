// scripts/generate-missing-content.js
// 用于自动检测多语言内容缺失项，生成 missing-content.json，兼容 Nuxt Content 目录结构和 _path 字段

import fs from "node:fs";
import path from "node:path";
import process from "node:process";
import { fileURLToPath } from "node:url";

const __dirname = path.dirname(
  fileURLToPath(import.meta.url)
);

// 可配置基准语言
const BASE_LANG = "en";
const CONTENT_ROOT = path.join(__dirname, "../content");
const OUTPUT_FILE = path.join(
  __dirname,
  "../missing-content.jsonc"
);

// 递归获取指定目录下所有内容文件的相对路径
function getAllFiles(dir, prefix = "") {
  let results = [];
  const list = fs.readdirSync(dir);
  list.forEach((file) => {
    const filePath = path.join(dir, file);
    const stat = fs.statSync(filePath);
    if (stat && stat.isDirectory()) {
      results = results.concat(
        getAllFiles(filePath, path.join(prefix, file))
      );
    } else if (
      file.endsWith(".md") ||
      file.endsWith(".yml") ||
      file.endsWith(".json")
    ) {
      results.push(path.join(prefix, file));
    }
  });
  return results;
}

// 获取所有语言目录
function getLangs() {
  return fs
    .readdirSync(CONTENT_ROOT)
    .filter((f) =>
      fs.statSync(path.join(CONTENT_ROOT, f)).isDirectory()
    );
}

// 主流程
function main() {
  const langs = getLangs();
  if (!langs.includes(BASE_LANG)) {
    console.error(`基准语言 ${BASE_LANG} 不存在！`);
    process.exit(1);
  }

  const baseLangDir = path.join(CONTENT_ROOT, BASE_LANG);
  const baseFiles = getAllFiles(baseLangDir);

  const missing = [];

  for (const relPath of baseFiles) {
    // 解析模块、版本、文件名
    const parts = relPath.split(path.sep);
    const module = parts[0] || "";
    const version =
      parts[1] && parts[1].startsWith("v") ? parts[1] : "";
    const file = parts[parts.length - 1];
    for (const lang of langs) {
      if (lang === BASE_LANG) continue;
      const targetPath = path.join(
        CONTENT_ROOT,
        lang,
        relPath
      );
      if (!fs.existsSync(targetPath)) {
        // 生成 Nuxt Content 风格的 _path
        const _path =
          `/${lang}/${relPath.replace(/\\/g, "/").replace(/\.[^/.]+$/, "")}`.replace(
            /\\/g,
            "/"
          );
        missing.push({
          lang,
          module,
          version,
          file,
          relativePath: relPath,
          _path,
        });
      }
    }
  }

  // 写入 JSONC 文件，顶部加注释
  const jsoncContent = [
    "// This file is auto-generated by scripts/generate-missing-content.js",
    "// It lists missing multi-language content for Nuxt Content-based docs.",
    "// Do not edit this file manually.",
    JSON.stringify(missing, null, 2),
  ].join("\n");
  fs.writeFileSync(OUTPUT_FILE, jsoncContent, "utf-8");
  console.log(
    "缺失项检测完成，结果已写入 ../missing-content.jsonc (自动生成，勿手动编辑)"
  );
}

main();
